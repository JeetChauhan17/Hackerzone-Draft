@font-face {
  font-family: "Geist Mono";
  src: url(https://assets.codepen.io/605876/GeistMonoVariableVF.ttf);
}
@import url("https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap");
*,
*::before,
*::after {
  transform-style: preserve-3d;
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  display: grid;
  place-items: center;
  font-family: "Geist Mono", monospace;
  background: hsl(0 0% 2%);
  color-scheme: dark only;
  /* line-height: 1.6; */
}

body::before {
  --line: hsl(0 0% 95% / 0.15);
  --size: 60px;
  content: "";
  height: 100vh;
  width: 100vw;
  position: fixed;
  background: linear-gradient(
        90deg,
        var(--line) 1px,
        transparent 1px var(--size)
      )
      50% 50% / var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
      var(--size) var(--size);
  mask: linear-gradient(-15deg, transparent 30%, white);
  top: 0;
  transform-style: flat;
  pointer-events: none;
  z-index: -1;
}

button {
  font-family: "Geist Mono", monospace;
  text-transform: uppercase;
  color: canvasText;
  padding: 1rem 2rem;
  border: 0;
  background: #ffffff3a;
  color: #fff;
  cursor: pointer;
  position: relative;
  transform-style: preserve-3d;
}

button:hover span:after {
  animation: flip 0.2s calc(var(--i) * 0.05s);
  color: #fff;
}
@keyframes flip {
  20% {
    content: "_";
  }
  40% {
    content: var(--c1);
  }
  60% {
    content: var(--c2);
  }
}

button::after {
  content: "";
  position: absolute;
  inset: 0;
  background: hsl(0 0% 100%);
  opacity: calc(var(--intent, 0) * 0.0875);
  transition: opacity 0.2s;
}

button:is(:hover, :focus-visible) {
  --intent: 1;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

button > span:not(.sr-only) {
  position: relative;
  color: transparent;
}

button > span:not(.sr-only)::after {
  content: attr(data-char);
  position: absolute;
  display: inline-block;
  inset: 0;
  color: canvasText;
}

button:is(:hover, :focus-visible) > span:not(.sr-only)::after {
  animation: flash calc(var(--speed, 0.25) * 1s) calc(var(--index, 0) * 0.05s)
    steps(1, end);
}

@keyframes flash {
  0%,
  20% {
    content: "_";
  }
  40% {
    content: var(--char-1);
  }
  60% {
    content: var(--char-2);
  }
  80% {
    content: var(--char-3);
  }
}

[data-explode="true"] button:is(:hover, :focus-visible) {
  --intent: 0;
}

[data-explode="true"]:has(button:is(:hover, :focus-visible)) .dummy {
  --intent: 1;
}

[data-explode="true"] #app {
  transform: translate3d(0, 0, 100vmin) rotateX(-24deg) rotateY(40deg);
}

[data-explode="true"] button {
  scale: 2.4;
}

/* button:not(.dummy)::before {
  content: ".char ::after";
  position: absolute;
  left: 100%;
  white-space: nowrap;
  translate: 0 -50%;
  transform-origin: 0 50%;
  scale: 0.5;
  top: 50%;
  text-transform: none;
  pointer-events: none;
  opacity: 0;
} */

/* [data-explode="true"] #app {
  transition: transform 0.5s 1s;
}

[data-explode="true"] button {
  transform: translate3d(0, 0, 50px);
  transition: transform 0.5s 2s, scale 0.5s 0s;
}

[data-explode="true"] .dummy {
  opacity: 1;
  transform: translate3d(0, 0, -50px);
  transition: transform 0.5s 2s, scale 0.5s 0s, opacity 0s 0s;
}

[data-explode="true"] button:not(.dummy)::before {
  opacity: 1;
  transition: opacity 1s 3s;
} */

/* button:not(.dummy)::before {
  transition: opacity 0.5s 0s;
}

button {
  transition: transform 0.5s 1s, scale 0.5s 3s, opacity 0s 3s;
} */

/* Heading */
.heading h1 {
  /* font-family: "Space Mono", monospace; */
  font-family: "Space Mono", monospace;
  /* font-weight: 700; */
  /* font-style: italic; */
  /* font-size: clamp(3rem, 4vw, 10rem);
  padding: 0rem clamp(1rem, 2vw, 3rem);
  border-radius: clamp(0.4rem, 0.75vw, 1rem); */

  font-size: clamp(2rem, 3vw, 6rem);
  padding: 0rem clamp(0.5rem, 1vw, 2rem);
  border-radius: clamp(0.3rem, 0.6vw, 0.8rem);

  /* font-size: clamp(1.5rem, 2vw, 4rem);
  padding: 0rem clamp(0.3rem, 0.8vw, 1.5rem);
  border-radius: clamp(0.2rem, 0.4vw, 0.6rem); */
  color: white;
  transition: all 0.62s cubic-bezier(0.66, 0.24, 0.07, 0.98);
}

.heading h1:hover {
  background-color: #fffffff5;
  color: black;
}
/* .heading h1:not(:hover) {
  -webkit-filter: blur(3px);
} */
html,
body,
div,
span,
h1,
h2,
h3,
h4,
h5,
h6,
p,
a,
img,
ul,
ol,
li,
figure,
figcaption,
footer,
header,
nav,
section {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  /* font: inherit; */
  vertical-align: baseline;
}
